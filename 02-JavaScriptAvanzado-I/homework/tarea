x = 1;
var a = 5;
var b = 10;
var c = function(a, b, c) {
  var x = 10;
  console.log(x); // 10
  console.log(a); // 8
  var f = function(a, b, c) {
    b = a;
    console.log(b); // 8
    b = c;
    var x = 5;
  }
  f(a,b,c);
  console.log(b); // 9
}
c(8,9,10);
console.log(b); // 10
console.log(x); // 1


console.log(bar); // undefined
console.log(baz); // baz no está definido
foo();
function foo() { console.log('Hola!'); }
var bar = 1;
baz = 2;


var instructor = "Tony";
if(true) {
    var instructor = "Franco";
}
console.log(instructor); //Franco


var instructor = "Tony";
console.log(instructor); // Tony
(function() {
   if(true) {
      var instructor = "Franco";
      console.log(instructor); // Franco
   }
})();
console.log(instructor); // Tony


var instructor = "Tony";
let pm = "Franco";
if (true) {
    var instructor = "The Flash";
    let pm = "Reverse Flash";
    console.log(instructor); // The Flash
    console.log(pm); // Reverse Flah
}
console.log(instructor); // The Flash
console.log(pm); // Franco

/*let te permite declarar variables limitando su alcance (scope) al bloque, declaración, o expresión donde se está usando. 
a diferencia de la palabra clave var la cual define una variable global o local en una función sin importar el ámbito del bloque.
*/


6 / "3" // 2
"2" * "3" // 6
4 + 5 + "px" // 9px
"$" + 4 + 5 // $45 concatena primero esta el string por eso queda 45
"4" - 2 // 2
"4px" - 2 // NaN
7 / 0 // Infinity
{}[0] // undefined
parseInt("09") // 9
5 && 2 // 2 devuelve el segundo elemento de los dos verdaderos
2 && 5 // 5 devuelve el segundo elemento de los dos verdaderos
5 || 0 // 5 
0 || 5 // 5
[3]+[3]-[10] // 23 concatena
3>2>1 // false 
[] == ![] // true


function test() {
    console.log(a); // undefined
    console.log(foo()); // 2
 
    var a = 1;
    function foo() {
       return 2;
    }
 }
 
 test();


 var snack = 'Meow Mix';

 function getFood(food) {
     if (food) {
         var snack = 'Friskies';
         return snack; // al ser false no se ejecuta
     }
     return snack; // Undefined porque es falso no entra
 }
 
 getFood(false);


var fullname = 'Juan Perez';
var obj = {
   fullname: 'Natalia Nerea',
   prop: {
      fullname: 'Aurelio De Rosa',
      getFullname: function() {
         return this.fullname; 
      }
   }
};

console.log(obj.prop.getFullname()); // Aurelio De Rosa

var test = obj.prop.getFullname; 

console.log(test()); // undefined


function printing() {
    console.log(1); // primer
    setTimeout(function() { console.log(2); }, 1000); // cuarto
    setTimeout(function() { console.log(3); }, 0); // tercero
    console.log(4); // segundo
 }
 
 printing();